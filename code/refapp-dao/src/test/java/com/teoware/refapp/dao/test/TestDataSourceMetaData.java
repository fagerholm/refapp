package com.teoware.refapp.dao.test;

public final class TestDataSourceMetaData {

	public static final String CREATE_SCHEMA_REFAPP_STATEMENT = "CREATE SCHEMA REFAPP AUTHORIZATION DBA";

	public static final String CREATE_TABLE_REF_AUTHORS_STATUS_STATEMENT = "CREATE TABLE REFAPP.REF_AUTHORS_STATUS ("
			+ "STATUS VARCHAR(10) NOT NULL, " + "DESCRIPTION VARCHAR(50) NOT NULL, "
			+ "CONSTRAINT REF_AUTHORS_STATUS_UC UNIQUE (STATUS))";

	public static final String CREATE_TABLE_REF_GENDER_STATEMENT = "CREATE TABLE REFAPP.REF_GENDER ("
			+ "GENDER VARCHAR(10) NOT NULL, " + "DESCRIPTION VARCHAR(50) NOT NULL, "
			+ "CONSTRAINT REF_GENDER_UC UNIQUE (GENDER))";

	public static final String CREATE_TABLE_AUTHORS_STATEMENT = "CREATE TABLE REFAPP.AUTHORS ("
			+ "USERNAME VARCHAR(20) NOT NULL, " + "FIRSTNAME VARCHAR(50) NOT NULL, "
			+ "LASTNAME VARCHAR(50) NOT NULL, " + "BIRTHDATE DATE NOT NULL, " + "GENDER VARCHAR(10) NOT NULL, "
			+ "EMAIL VARCHAR(50) NOT NULL, " + "PHONE VARCHAR(50), " + "CONSTRAINT AUTHORS_PK PRIMARY KEY (USERNAME), "
			+ "CONSTRAINT AUTHORS_FK1 FOREIGN KEY (GENDER) REFERENCES REFAPP.REF_GENDER (GENDER), "
			+ "CONSTRAINT AUTHORS_UC1 UNIQUE (EMAIL))";

	public static final String CREATE_TABLE_AUTHORS_STATUS_STATEMENT = "CREATE TABLE REFAPP.AUTHORS_STATUS ("
			+ "AUTHOR VARCHAR(20) NOT NULL, "
			+ "STATUS VARCHAR(10) NOT NULL, "
			+ "CREATED DATE NOT NULL, "
			+ "MODIFIED	DATE NOT NULL, "
			+ "CONSTRAINT AUTHORS_STATUS_PK	PRIMARY KEY (AUTHOR), "
			+ "CONSTRAINT AUTHORS_STATUS_FK1 FOREIGN KEY (AUTHOR) REFERENCES REFAPP.AUTHORS (USERNAME) ON DELETE CASCADE, "
			+ "CONSTRAINT AUTHORS_STATUS_FK2 FOREIGN KEY (STATUS) REFERENCES REFAPP.REF_AUTHORS_STATUS (STATUS), "
			+ "CONSTRAINT AUTHORS_STATUS_CC1 CHECK (MODIFIED >= CREATED))";

	public static final String CREATE_TABLE_AUTHORS_PASSWORD_STATEMENT = "CREATE TABLE REFAPP.AUTHORS_PASSWORD ("
			+ "AUTHOR VARCHAR(20) NOT NULL, "
			+ "PASSWORD	VARCHAR(100) NOT NULL, "
			+ "CONSTRAINT AUTHORS_PASSWORD_PK PRIMARY KEY (AUTHOR), "
			+ "CONSTRAINT AUTHORS_PASSWORD_FK1 FOREIGN KEY (AUTHOR) REFERENCES REFAPP.AUTHORS (USERNAME) ON DELETE CASCADE)";

	public static final String CREATE_TABLE_AUTHORS_ADDRESS_STATEMENT = "CREATE TABLE REFAPP.AUTHORS_ADDRESS ("
			+ "AUTHOR VARCHAR(20) NOT NULL, "
			+ "ADDRESS VARCHAR(50), "
			+ "POSTALCODE VARCHAR(10), "
			+ "MUNICIPALITY VARCHAR(50), "
			+ "REGION VARCHAR(50), "
			+ "COUNTRY VARCHAR(50), "
			+ "CONSTRAINT AUTHORS_ADDRESS_PK PRIMARY KEY (AUTHOR), "
			+ "CONSTRAINT AUTHORS_ADDRESS_FK1 FOREIGN KEY (AUTHOR) REFERENCES REFAPP.AUTHORS (USERNAME) ON DELETE CASCADE)";

	public static final String CREATE_VIEW_AUTHORS_V_STATEMENT = "CREATE VIEW REFAPP.AUTHORS_V ("
			+ "USERNAME, FIRSTNAME, LASTNAME, BIRTHDATE, GENDER, EMAIL, PHONE, "
			+ "ADDRESS, POSTALCODE, MUNICIPALITY, REGION, COUNTRY, STATUS, CREATED, MODIFIED) "
			+ "AS SELECT A.USERNAME, A.FIRSTNAME, A.LASTNAME, A.BIRTHDATE, A.GENDER, A.EMAIL, A.PHONE, "
			+ "D.ADDRESS, D.POSTALCODE, D.MUNICIPALITY, D.REGION, D.COUNTRY, S.STATUS, S.CREATED, S.MODIFIED "
			+ "FROM REFAPP.AUTHORS A, REFAPP.AUTHORS_ADDRESS D, REFAPP.AUTHORS_STATUS S "
			+ "WHERE A.USERNAME = S.AUTHOR AND A.USERNAME = D.AUTHOR";

	public static final String INSERT_REF_AUTHORS_STATUS_STATEMENT_1 = "INSERT INTO REFAPP.REF_AUTHORS_STATUS "
			+ "VALUES ('PENDING', 'User is pending activation')";

	public static final String INSERT_REF_AUTHORS_STATUS_STATEMENT_2 = "INSERT INTO REFAPP.REF_AUTHORS_STATUS "
			+ "VALUES ('ACTIVE', 'User is active')";

	public static final String INSERT_REF_AUTHORS_STATUS_STATEMENT_3 = "INSERT INTO REFAPP.REF_AUTHORS_STATUS "
			+ "VALUES ('SUSPENDED', 'User is suspended')";

	public static final String INSERT_REF_AUTHORS_STATUS_STATEMENT_4 = "INSERT INTO REFAPP.REF_AUTHORS_STATUS "
			+ "VALUES ('DELETED', 'User has been deleted')";

	public static final String INSERT_REF_GENDER_STATEMENT_1 = "INSERT INTO REFAPP.REF_GENDER "
			+ "VALUES ('MALE', 'Male')";

	public static final String INSERT_REF_GENDER_STATEMENT_2 = "INSERT INTO REFAPP.REF_GENDER "
			+ "VALUES ('FEMALE', 'Female')";
}
